{"ast":null,"code":"var _jsxFileName = \"/Users/kjrodgers/React Js/01-starting-setup/src/components/Expenses/Expenses.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport ExpenseFilter from \"./ExpenseFilter\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./Expenses.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Expenses = props => {\n  _s();\n  const [filteredYear, setFilteredYear] = useState(\"Show All\");\n  const yearFilterHandeler = year => {\n    setFilteredYear(year);\n    // const newFilterYear = year;\n    // props.filteredYear(newFilterYear);\n  };\n\n  //   const isYear = (expense) => {\n  //     if (filteredYear !== \"Show All\") {\n  //       return expense.props.date.getFullYear().toString() === filteredYear;\n  //     } else {\n  //       return true;\n  //     }\n\n  const filteredExpenses = props.item.filter(expense => {\n    if (filteredYear !== \"Show All\") {\n      return expense.date.getFullYear().toString() === filteredYear;\n    } else {\n      return true;\n    }\n  });\n  let expensesContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    style: \"color: white;\",\n    children: \"No Expenses Found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 25\n  }, this);\n  if (filteredExpenses.length > 0) {\n    expensesContent = filteredExpenses.map(x => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: x.title,\n      amount: x.amount,\n      date: x.date\n    }, x.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpenseFilter, {\n        defaultYear: filteredYear,\n        onYearFilter: yearFilterHandeler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), expensesContent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Expenses, \"92nrcrTTgUUodDKl8GRZ4XFbBTE=\");\n_c = Expenses;\nexport default Expenses;\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["React","useState","Card","ExpenseFilter","ExpenseItem","Expenses","props","filteredYear","setFilteredYear","yearFilterHandeler","year","filteredExpenses","item","filter","expense","date","getFullYear","toString","expensesContent","length","map","x","title","amount","id"],"sources":["/Users/kjrodgers/React Js/01-starting-setup/src/components/Expenses/Expenses.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport Card from \"../UI/Card\";\nimport ExpenseFilter from \"./ExpenseFilter\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./Expenses.css\";\n\nconst Expenses = (props) => {\n  const [filteredYear, setFilteredYear] = useState(\"Show All\");\n  const yearFilterHandeler = (year) => {\n    setFilteredYear(year);\n    // const newFilterYear = year;\n    // props.filteredYear(newFilterYear);\n  };\n\n  //   const isYear = (expense) => {\n  //     if (filteredYear !== \"Show All\") {\n  //       return expense.props.date.getFullYear().toString() === filteredYear;\n  //     } else {\n  //       return true;\n  //     }\n\n  const filteredExpenses = props.item.filter((expense) => {\n    if (filteredYear !== \"Show All\") {\n      return expense.date.getFullYear().toString() === filteredYear;\n    } else {\n      return true;\n    }\n  });\n\n  let expensesContent = <p style={\"color: white;\"}>No Expenses Found.</p>;\n\n  if (filteredExpenses.length > 0) {\n    expensesContent = filteredExpenses.map((x) => (\n      <ExpenseItem key={x.id} title={x.title} amount={x.amount} date={x.date} />\n    ));\n  }\n\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpenseFilter\n          defaultYear={filteredYear}\n          onYearFilter={yearFilterHandeler}\n        />\n        {expensesContent}\n      </Card>\n    </div>\n  );\n};\n\nexport default Expenses;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,gBAAgB;AAAC;AAExB,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAA;EAC1B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,UAAU,CAAC;EAC5D,MAAMQ,kBAAkB,GAAIC,IAAI,IAAK;IACnCF,eAAe,CAACE,IAAI,CAAC;IACrB;IACA;EACF,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMC,gBAAgB,GAAGL,KAAK,CAACM,IAAI,CAACC,MAAM,CAAEC,OAAO,IAAK;IACtD,IAAIP,YAAY,KAAK,UAAU,EAAE;MAC/B,OAAOO,OAAO,CAACC,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,EAAE,KAAKV,YAAY;IAC/D,CAAC,MAAM;MACL,OAAO,IAAI;IACb;EACF,CAAC,CAAC;EAEF,IAAIW,eAAe,gBAAG;IAAG,KAAK,EAAE,eAAgB;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAuB;EAEvE,IAAIP,gBAAgB,CAACQ,MAAM,GAAG,CAAC,EAAE;IAC/BD,eAAe,GAAGP,gBAAgB,CAACS,GAAG,CAAEC,CAAC,iBACvC,QAAC,WAAW;MAAY,KAAK,EAAEA,CAAC,CAACC,KAAM;MAAC,MAAM,EAAED,CAAC,CAACE,MAAO;MAAC,IAAI,EAAEF,CAAC,CAACN;IAAK,GAArDM,CAAC,CAACG,EAAE;MAAA;MAAA;MAAA;IAAA,QACvB,CAAC;EACJ;EAEA,oBACE;IAAA,uBACE,QAAC,IAAI;MAAC,SAAS,EAAC,UAAU;MAAA,wBACxB,QAAC,aAAa;QACZ,WAAW,EAAEjB,YAAa;QAC1B,YAAY,EAAEE;MAAmB;QAAA;QAAA;QAAA;MAAA,QACjC,EACDS,eAAe;IAAA;MAAA;MAAA;MAAA;IAAA;EACX;IAAA;IAAA;IAAA;EAAA,QACH;AAEV,CAAC;AAAC,GA1CIb,QAAQ;AAAA,KAARA,QAAQ;AA4Cd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}