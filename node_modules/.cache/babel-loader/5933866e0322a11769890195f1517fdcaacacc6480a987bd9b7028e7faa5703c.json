{"ast":null,"code":"var _jsxFileName = \"/Users/kjrodgers/React Js/01-starting-setup/src/components/NewExpense/ExpenseForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './ExpenseForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseForm = () => {\n  _s();\n  const [enteredTitle, setEnteredTitle] = useState('');\n  const [enteredAmount, setEnteredAmount] = useState('');\n  const [enteredDate, setEnteredDate] = useState('');\n  // The commented out approach is used when you want to put multiple used states into one\n  // useState. You have to pass in a function to the setUserInput function in order to \n  // perseve the previous state of the other useState variables\n  // const [userInput, setUserInput] = useState({\n  //     enteredTitle: '',\n  //     enteredAmount: '',\n  //     enteredDate: ''\n  // });\n  const titleChangeHanderer = event => {\n    setEnteredTitle(event.target.value);\n    // setUserInput((prevState) => {\n    //     return {\n    //         ...prevState,\n    //         enteredTitle: event.target.value\n    //     };\n    // });\n  };\n\n  const amountChangeHandler = event => {\n    setEnteredAmount(event.target.value);\n    // setUserInput((prevState) => {\n    //     return {\n    //         ...prevState,\n    //         enteredAmount: event.target.value\n    //     };\n    // });\n  };\n\n  const dateChangeHandler = event => {\n    setEnteredDate(event.target.value);\n    // setUserInput((prevState) => {\n    //     return {\n    //         ...prevState,\n    //         enteredDate: event.target.value\n    //     };\n    // });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const expenseData = {\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: new Date(enteredDate)\n    };\n    console.log(expenseData);\n    setEnteredAmount('');\n    setEnteredTitle('');\n    setEnteredDate('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: enteredTitle,\n          onChange: titleChangeHanderer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0.01\",\n          step: \"0.01\",\n          value: enteredAmount,\n          onChange: amountChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          min: \"2022-01-01\",\n          max: \"2023-01-18\",\n          value: enteredDate,\n          nChange: dateChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(ExpenseForm, \"/TSOglz5ZV3C6oWQkp/FZ+OWqo4=\");\n_c = ExpenseForm;\nexport default ExpenseForm;\nvar _c;\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"names":["React","useState","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","titleChangeHanderer","event","target","value","amountChangeHandler","dateChangeHandler","submitHandler","preventDefault","expenseData","title","amount","date","Date","console","log"],"sources":["/Users/kjrodgers/React Js/01-starting-setup/src/components/NewExpense/ExpenseForm.js"],"sourcesContent":["import React, { useState } from 'react';\n\n\n\nimport './ExpenseForm.css';\nconst ExpenseForm = () => {\n\n    const [enteredTitle, setEnteredTitle] = useState('');\n    const [enteredAmount, setEnteredAmount] = useState('');\n    const [enteredDate, setEnteredDate] = useState('');\n    // The commented out approach is used when you want to put multiple used states into one\n    // useState. You have to pass in a function to the setUserInput function in order to \n    // perseve the previous state of the other useState variables\n    // const [userInput, setUserInput] = useState({\n    //     enteredTitle: '',\n    //     enteredAmount: '',\n    //     enteredDate: ''\n    // });\n    const titleChangeHanderer = (event) => {\n        setEnteredTitle(event.target.value);\n        // setUserInput((prevState) => {\n        //     return {\n        //         ...prevState,\n        //         enteredTitle: event.target.value\n        //     };\n        // });\n    };\n    const amountChangeHandler = (event) => {\n        setEnteredAmount(event.target.value);\n        // setUserInput((prevState) => {\n        //     return {\n        //         ...prevState,\n        //         enteredAmount: event.target.value\n        //     };\n        // });\n    };\n    const dateChangeHandler = (event) => {\n        setEnteredDate(event.target.value);\n        // setUserInput((prevState) => {\n        //     return {\n        //         ...prevState,\n        //         enteredDate: event.target.value\n        //     };\n        // });\n    };\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n        const expenseData = {\n            title: enteredTitle,\n            amount: enteredAmount,\n            date: new Date(enteredDate)\n        };\n\n        console.log(expenseData);\n        setEnteredAmount('');\n        setEnteredTitle('');\n        setEnteredDate('');\n    };\n    return (\n        <form onSubmit={submitHandler}>\n            <div className='new-expense__controls'>\n                <div className='new-expense__control'>\n                    <label>Title</label>\n                    <input \n                        type='text' \n                        value={enteredTitle} \n                        onChange={titleChangeHanderer}\n                    />\n                </div>\n                <div className='new-expense__control'>\n                    <label>Amount</label>\n                    <input \n                        type='number' \n                        min=\"0.01\" \n                        step=\"0.01\" \n                        value={enteredAmount} \n                        onChange={amountChangeHandler}\n                    />\n                </div>\n                <div className='new-expense__control'>\n                    <label>Date</label>\n                    <input \n                        type='date' \n                        min=\"2022-01-01\" \n                        max=\"2023-01-18\" \n                        value={enteredDate} \n                        nChange={dateChangeHandler}\n                        />\n                </div>\n            </div>\n            <div className='new-expense__actions'>\n                <button type='submit'>Add Expense</button>\n            </div>\n        </form>\n    );\n}\n\nexport default ExpenseForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}